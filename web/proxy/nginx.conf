upstream api_stream {
    server api:8080;
}

server {
    listen 443 ssl default_server;

    server_name "websocket.vitor.egami.vms.ufsc.br";

    # Serve static files
    root /usr/share/nginx/html;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /aa12/ {
        alias /usr/share/nginx/;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /aa14/ {
        alias /usr/share/nginx/;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # Client certificate and key
    ssl_certificate /etc/nginx/ssl/web-crt.pem;
    ssl_certificate_key /etc/nginx/ssl/web-key.pem;
    ssl_client_certificate /etc/nginx/ssl/ca-crt.pem;

    ssl_verify_client optional;

    # Web app logs
    access_log /var/log/nginx/web_access.log;
    error_log /var/log/nginx/web_error.log;

    # Set proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # proxy_set_header Authorization $http_authorization;

    # Reverse proxy API requests
    location /api/ {
        proxy_pass https://api_stream;

        access_log /var/log/nginx/api_access.log;
        error_log /var/log/nginx/api_error.log;

        # mTLS configuration
        proxy_ssl_certificate /etc/nginx/ssl/client-crt.pem;
        proxy_ssl_certificate_key /etc/nginx/ssl/client-key.pem;
        proxy_ssl_trusted_certificate /etc/nginx/ssl/ca-crt.pem;
        proxy_ssl_verify on;
        proxy_ssl_verify_depth 2;
        proxy_ssl_protocols TLSv1.2 TLSv1.3;
    }
}

server {
    listen 8080 ssl;
    server_name api;

    ssl_certificate /etc/nginx/ssl/api-crt.pem;
    ssl_certificate_key /etc/nginx/ssl/api-key.pem;
    ssl_client_certificate /etc/nginx/ssl/ca-crt.pem;

    # Change for production
    ssl_verify_client off;
    ssl_protocols TLSv1.2 TLSv1.3;

    location / {
        # HTTPS !!
        proxy_set_header X-Client-Cert $ssl_client_cert;
        proxy_pass https://api:8080/;
    }
}
